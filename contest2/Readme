######Problem 1: Multiple Stacks 
Implement two stacks in one array

Input:

Each testcase contains integers N, M, where N is the size of the array containing both stacks, and M is the number of operations in the test case. 
Next line will include the size, and next M lines will include series of operations of the following type Character, value, where character indicates 
the stack operation $P1-push in stack 1,P2-push in stack 2, O1-pop from stack1, O2-pop from stack2, S1-size of stack1, S2-size of stack2$.
For push, it is followed by a value, others will not be followed by a value.
Output:
For each testcase, output the result of each operation separated by a newline. The output of Push should be the content of the stack (print function given). 
Pop should output the popped value, top the value on top, size the size of the stack. If stack full when Push, return StackFullException case sensitive.
If stack empty when pop or top, return StackEmptyException case sensitive. d.
Since intermediate outputs are tracked in the test cases, do not modify the driver code.

Sample Input:

    6
    9
    S1
    P1 1
    P2 2
    P1 3
    P1 4
    O1
    O2
    O2
    S1
Sample Output:
    0
    1 None None None None None
    1 None None None None 2
    1 3 None None None 2
    1 3 4 None None 2
    4
    1 3 None None None 2
    2
    1 3 None None None None
    StackEmptyException
    2
 
References:

    
######Problem 2: Balanced paranthesis 
Checking for balanced parenthesization is a common application of stacks. Here is a modified problem.
Your goal is to find the longest balanced parenthesis in the given string. If there are multiple print the first one.

Input Format:
n- the number of inputs, followed by n lines each containing one string of parenthesis

Output format:
number of characters in the longest balanced parenthesis, following by the actual substring

Sample input
4
((()() 
(((() 
(((())
(()())(()

Sample output
4 ()()
2 ()
4 (())
6 (()())

References: 
[https://www.geeksforgeeks.org/length-of-the-longest-valid-substring/]
